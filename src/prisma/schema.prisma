generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    leases        Lease[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Lease {
    id String @id @default(cuid())

    name                    String
    startDate               DateTime
    numberOfMonths          Int
    allowedMiles            Int
    excessFeePerMileInCents Int

    user             User              @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId           String
    odometerReadings OdometerReading[]
}

model OdometerReading {
    id String @id @default(cuid())

    date  DateTime
    miles Int

    lease   Lease  @relation(fields: [leaseId], references: [id], onDelete: Cascade)
    leaseId String
}
